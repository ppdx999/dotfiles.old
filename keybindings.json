[
  /**
    Alt+h = left
    Alt+j = down
    Alt+k = up
    Alt+l = right
    Alt+u = home
    Alt+m = end
    Alt+f = next-word
    Alt+b = prev-word
  */
  {
    "key": "alt+j",
    "command": "workbench.action.quickOpenSelectNext",
    /* Catches Quick Picker, need better see github issue */
    "when": "inputFocus && !editorFocus && !findInputFocussed && !findWidgetVisible"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    /* Catches Quick Picker, need better see github issue */
    "when": "inputFocus && !editorFocus && !findInputFocussed && !findWidgetVisible"
  },
  {
    "key": "alt+h",
    "command": "cursorLeft",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+j",
    "command": "cursorDown",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+k",
    "command": "cursorUp",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l",
    "command": "cursorRight",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+shift+h",
    "command": "cursorLeftSelect",
    "when": "editorTextFocus"
  },
  {
    "command": "cursorDownSelect",
    "key": "alt+shift+j",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+shift+k",
    "command": "cursorUpSelect",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+shift+l",
    "command": "cursorRightSelect",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+b",
    "command": "cursorWordStartLeft",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+f",
    "command": "cursorWordEndRight",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+shift+b",
    "command": "cursorWordStartLeftSelect",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+shift+w",
    "command": "cursorWordEndRightSelect",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+u",
    "command": "cursorHome",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+shift+u",
    "command": "cursorHomeSelect",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+m",
    "command": "cursorEnd",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+shift+m",
    "command": "cursorEndSelect",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+j",
    "command": "repl.action.historyNext",
    "when": "editorTextFocus && inDebugRepl && onLastDebugReplLine"
  },
  {
    "key": "alt+j",
    "command": "settings.action.focusSettingsFile",
    "when": "inSettingsSearch"
  },
  {
    "key": "alt+j",
    "command": "showNextParameterHint",
    "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "alt+j",
    "command": "selectNextSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "alt+j",
    "command": "keybindings.editor.focusKeybindings",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "alt+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+j",
    "command": "search.focus.nextInputBox",
    "when": "inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.interactivePlayground.arrowDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "alt+k",
    "command": "repl.action.historyPrevious",
    "when": "editorTextFocus && inDebugRepl && onFirsteDebugReplLine"
  },
  {
    "key": "alt+k",
    "command": "showPrevParameterHint",
    "when": "editorTextFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "alt+k",
    "command": "selectPrevSuggestion",
    "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
  },
  {
    "key": "alt+k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+k",
    "command": "search.action.focusSearchFromResults",
    "when": "firstMatchFocus && searchViewletVisible"
  },
  {
    "key": "alt+k",
    "command": "search.focus.previousInputBox",
    "when": "inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.interactivePlayground.arrowUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "alt+k",
    "command": "find.history.showPrevious",
    "when": "editorFocus && findInputFocussed && findWidgetVisible"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.terminal.findWidget.history.showPrevious",
    "when": "terminalFindWidgetInputFocused && terminalFindWidgetVisible"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible && !findInputFocussed"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible && !findInputFocussed"
  },
  {
    "key": "ctrl+j",
    "command": "editor.action.joinLines"
  },
  /**
    Functional Programming
  */
  {
    /* arrow function*/
    "key": "alt+a",
    "command": "editor.action.insertSnippet",
    "args": {
      "snippet": "=>"
    }
  },
  {
    /* pipeline */
    "key": "alt+p",
    "command": "editor.action.insertSnippet",
    "args": {
      "snippet": "['>']("
    }
  }
]
